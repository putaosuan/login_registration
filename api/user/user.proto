syntax = "proto3";

package api.user;
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "my_sso/api/user;user";
option java_multiple_files = true;
option java_package = "api.user";

service User {
	rpc UserLogin (LoginRequest) returns (LoginReply){
		option(google.api.http) = {
			post:"login",
			body:"*"
		};
	}
	rpc UserRegister(RegisterRequest) returns (RegisterReply){
			option(google.api.http) = {
				post:"register",
				body:"*"
			};
	}
	rpc UserCode(UserCodeRequest) returns (UserCodeReply){
		option(google.api.http) = {
			post:"code",
			body:"*"
		};
	}
	rpc UserGet(UserGetRequest) returns (UserGetReply){
		option(google.api.http) = {
			get:"user/{id}"
		};
	}

}

message LoginRequest {
	string mobile = 1 [(validate.rules).string = { min_len: 10, max_len: 18 }];
	string password = 2 [(validate.rules).string = { min_len: 6, max_len: 50 }];
}
message LoginReply {
	int64 id = 1;
	string name = 2;
	string email  = 3;
	string mobile = 4;
	string token  =5;
}
message RegisterRequest{
	string mobile = 1 [(validate.rules).string = { min_len: 10, max_len: 18 }];
	string password = 2 [(validate.rules).string = { min_len: 6, max_len: 50 }];
	string code = 3 [(validate.rules).string = { min_len: 6, max_len: 6 }];
}
message RegisterReply{}
message UserCodeRequest {
	string mobile = 1 [(validate.rules).string = { min_len: 10, max_len: 18 }];
}
message UserCodeReply {}
message UserGetRequest{
	int64 id = 1;
}
message UserGetReply {
	int64 id = 1;
	string name = 2;
	string email  = 3;
	string mobile = 4;
}