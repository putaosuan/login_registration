// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/go-kirito/pkg/application"
	"login_registration/api/user"
	"login_registration/internal/user/domain/service"
	"login_registration/internal/user/repository"
	"login_registration/internal/user/usecase"
)

// Injectors from wire.go:

func MakeUseCase() (*UseCases, error) {
	iUserRepo := repository.NewUserRepo()
	iUserCacheRepo := repository.NewUserCacheRepo()
	iUserService := service.NewUserService(iUserRepo, iUserCacheRepo)
	iUserUseCase := usecase.NewUserUseCase(iUserService)
	useCases := &UseCases{
		iuserusecase0: iUserUseCase,
	}
	return useCases, nil
}

// wire.go:

type UseCases struct {
	iuserusecase0 user.IUserUseCase
}

func RegisterService(app application.Application) error {
	uc, err := MakeUseCase()
	if err != nil {
		return err
	}
	user.RegisterUserServer(app, uc.iuserusecase0)
	return nil
}
